// Code generated by ogen, DO NOT EDIT.

package api

// CreateTaskCreated is response for CreateTask operation.
type CreateTaskCreated struct{}

// DeleteTaskNoContent is response for DeleteTask operation.
type DeleteTaskNoContent struct{}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// PartiallyUpdateTaskNoContent is response for PartiallyUpdateTask operation.
type PartiallyUpdateTaskNoContent struct{}

// Ref: #/components/schemas/Task
type Task struct {
	ID        OptInt    `json:"id"`
	Title     OptString `json:"title"`
	Completed OptBool   `json:"completed"`
}

// GetID returns the value of ID.
func (s *Task) GetID() OptInt {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Task) GetTitle() OptString {
	return s.Title
}

// GetCompleted returns the value of Completed.
func (s *Task) GetCompleted() OptBool {
	return s.Completed
}

// SetID sets the value of ID.
func (s *Task) SetID(val OptInt) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Task) SetTitle(val OptString) {
	s.Title = val
}

// SetCompleted sets the value of Completed.
func (s *Task) SetCompleted(val OptBool) {
	s.Completed = val
}

// Ref: #/components/schemas/TaskForCreate
type TaskForCreate struct {
	Title     OptString `json:"title"`
	Completed OptBool   `json:"completed"`
}

// GetTitle returns the value of Title.
func (s *TaskForCreate) GetTitle() OptString {
	return s.Title
}

// GetCompleted returns the value of Completed.
func (s *TaskForCreate) GetCompleted() OptBool {
	return s.Completed
}

// SetTitle sets the value of Title.
func (s *TaskForCreate) SetTitle(val OptString) {
	s.Title = val
}

// SetCompleted sets the value of Completed.
func (s *TaskForCreate) SetCompleted(val OptBool) {
	s.Completed = val
}

// UpdateTaskNoContent is response for UpdateTask operation.
type UpdateTaskNoContent struct{}
